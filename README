*** summary
pix is a minimalist gallery system.  less than 300 lines of code allow you to
organize all your photos, we traverse a directory structure and as-needed
generate thumb-nails and web optimized versions of your images.  thru a simple
'.meta' file in each directory you can assign descriptions to each image.

pix doesn't try to do what other programs do well.  in true unix style pix
does one thing and does it well in a very transparent manner. 
- no image cropping or rotating; irfanview, gimp, etc.. all do a better job and 
  are more flexible.
- no album management; the filesystem is a familiar and intuitive way 
  to manage your images.
- no uploads; if you have an account on a box and are running cgi/ php scripts,
  you should have a firm grasp on ftp or scp.


*** install instructions
- make sure python image library is installed
  on debian you can do: apt-get install python-imaging
  or find PIL and extract it in the same directory as pix
- create a directory pix/album
- chmod -R 777 pix/album


*** album setup and guidelines
- your directory structure will dictate the hierarhcy for albums and picture
  placement
- use underscores in album names and picture names
  for example: 'new_years_eve_2004'
  or: 'demian_posing_with_elvis.jpg'
- .meta file guide 
  in each directory optionally create a .meta file, the format is
  <pic file name> = <description>
  it's not necessary to have every file in there.  in vim do: ':r!ls' to get a
  complete listing of the files in this directory.
  the description can only be on 1 line!
- template guide
  the template file is just a simple html document you can pretty much do with
  it what you want, you place the tokens for the generated elements into your 
  html.
  - @title@
    shows you the current directory with a pipe in front of it (the assumption
    is that you will have a string before the pipe, like the name of your site
  - @breadcrumb@
    a pipe "|" delimited string that shows you where you are at in the directory
    hierarchy inside the albums.  it gives you links to go to what ever level
    you want
  - @albums@
    if there are no sub-directories in the current directory this returns an
    empty string.
    if there are sub-directories this gives you the string '<h2>albums</h1>'
    followed by an unordered list of albums.
  - @pics-thumb@
    this returns thumbnail images of all the pictures in the current directory.
    the thumbnails dictate what the web sized pic will be
  - @pics-list@
    if there are no pics in the current directory this returns an empty string.
    if there are pics this gives you the string '<h2>pictures</h2>' followed by
    an unordered list of pics.  this might be a good option if bandwidth is a
    concern.
  - @album-description@
    if there is no currently selected web-pic we print the album description, 
    this is found in the '.meta' file.  all lines between the "album
    description" tags will be displayed as the album description.
  - @web-pic@
    when the user selects a thumbnail or picture from the list, the web pic is
    displayed.  the web pic is resized for typical web viewing.  if the user
    wants to see the original image (assuming it's larger than the web-pic)
    they can click on the web version to be directed to the actual original.
  - @comment@
    this is where the comment (if any) associated with the picture is placed.


*** trouble shooting
- are there files in the album directory that are not images?
- is the permission of the album directory 777?
